// *******************************************************************************************************************************
// *******************************************************************************************************************************
//
//		Name:		hardware.cpp
//		Purpose:	Hardware Interface
//		Created:	25th July 2016
//		Author:		Paul Robson (paul@robsons.org.uk)
//
// *******************************************************************************************************************************
// *******************************************************************************************************************************

#include <stdio.h>
#include <stdlib.h>
#include "sys_processor.h"
#include "hardware.h"
#include "gfx.h"																// Want the keyboard access.

static WORD16 screenMemory[32*16];												// Screen memory
static WORD16 screenPtr; 														// Pointer into screen memory
static BYTE8 pendingKey; 														// Pending key or 0

// *******************************************************************************************************************************
//													Hardware Reset
// *******************************************************************************************************************************

void HWIReset(void) {
	screenPtr = rand() & 0x1FF;
	for (int i = 0;i < 32*16;i++) screenMemory[i] = rand() & 0x7FF;
	pendingKey = 0;
}

// *******************************************************************************************************************************
//												  Read Screen Memory
// *******************************************************************************************************************************

WORD16 HWIReadScreenMemory(int x,int y) {
	return screenMemory[(x & 0x1F)+(y & 0x0F) * 32];
}

// *******************************************************************************************************************************
//											Process keys passed from debugger
// *******************************************************************************************************************************

BYTE8 HWIProcessKey(BYTE8 key,BYTE8 isRunMode) {
	if (key != 0xFF) {
		pendingKey = GFXToASCII(key,1);
	}
	return key;
}

// *******************************************************************************************************************************
//													Get keystroke if any
// *******************************************************************************************************************************

BYTE8 HWIGetKey(void) {
	int i = pendingKey;
	pendingKey = 0;
	return i;
}

// *******************************************************************************************************************************
//											  Handle Screen I/O Functionality
// *******************************************************************************************************************************

void HWIWriteScreenAddress(LONG32 address) {
	screenPtr = (address & 0x1FF);
}

void HWIWriteScreenMemory(LONG32 data) {
	screenMemory[screenPtr] = data & 0x7FF;
}

